{"ast":null,"code":"var _jsxFileName = \"F:\\\\do_an_front_end\\\\frontendmovie\\\\src\\\\Pages\\\\VideoFilm\\\\VideoFilm.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './VideoFilm.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar test = ['hello', 'votiendat', 'hoc vien buuc hinh vien thong', 'hello', 'votiendat', 'hoc vien buuc hinh vien thong', 'hello', 'votiendat', 'hoc vien buuc hinh vien thong', 'hoc vien buuc hinh vien thong', 'hello', 'votiendat', 'hoc vien buuc hinh vien thong', 'hoc vien buuc hinh vien thong', 'hello', 'votiendat', 'hoc vien buuc hinh vien thong'];\n\nfunction VideoFilm() {\n  _s();\n\n  const [listfilm, setListfilm] = useState(undefined);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    axios.get(`http://localhost:8081/ObjectVideoMoviesIdVideo/${id}`).then(res => {\n      if (res.data != undefined) {\n        axios.get(`REACT_APP_ALL_VIDEO_MOVIES_ID/${res.data.id}`).then(res => {\n          if (res.data != undefined) {\n            console.log('test', res1.data);\n            setList(res.data);\n          }\n        });\n      }\n    }).catch(err => console.log(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Film container-sm w-100\",\n    children: [listfilm != undefined ? /*#__PURE__*/_jsxDEV(\"video\", {\n      className: \"VideoFilm container-sm w-100 \",\n      width: \"1000\",\n      height: \"500\",\n      controls: true,\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        src: `http://localhost:8081/static/videos/${id}`,\n        type: \"video/mp4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TenPhim\",\n      children: \"vo tien dat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TapPhim\",\n      children: listfilm != undefined ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: listfilm.map((router, index) => {\n          return /*#__PURE__*/_jsxDEV(\"a\", {\n            href: router.idvideo,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"col-sm-1\",\n              children: router.episode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 41\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s(VideoFilm, \"rLbTNXE9v6Dl1oiVkXpZ3UZPCns=\", false, function () {\n  return [useParams];\n});\n\n_c = VideoFilm;\nexport default VideoFilm;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoFilm\");","map":{"version":3,"sources":["F:/do_an_front_end/frontendmovie/src/Pages/VideoFilm/VideoFilm.js"],"names":["axios","React","useEffect","useState","useParams","test","VideoFilm","listfilm","setListfilm","undefined","id","get","then","res","data","console","log","res1","setList","catch","err","map","router","index","idvideo","episode"],"mappings":";;;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAO,kBAAP;;AAEA,IAAIC,IAAI,GAAG,CACP,OADO,EAEP,WAFO,EAGP,+BAHO,EAIP,OAJO,EAKP,WALO,EAMP,+BANO,EAOP,OAPO,EAQP,WARO,EASP,+BATO,EAUP,+BAVO,EAWP,OAXO,EAYP,WAZO,EAaP,+BAbO,EAcP,+BAdO,EAeP,OAfO,EAgBP,WAhBO,EAiBP,+BAjBO,CAAX;;AAqBA,SAASC,SAAT,GAAoB;AAAA;;AAChB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAACM,SAAD,CAAxC;AACA,QAAM;AAACC,IAAAA;AAAD,MAAON,SAAS,EAAtB;AACAF,EAAAA,SAAS,CAAC,MAAK;AACXF,IAAAA,KAAK,CAACW,GAAN,CAAW,kDAAiDD,EAAG,EAA/D,EACAE,IADA,CACMC,GAAD,IAAS;AACV,UAAGA,GAAG,CAACC,IAAJ,IAAYL,SAAf,EAAyB;AACrBT,QAAAA,KAAK,CAACW,GAAN,CAAW,iCAAgCE,GAAG,CAACC,IAAJ,CAASJ,EAAG,EAAvD,EAA0DE,IAA1D,CAAgEC,GAAD,IAAO;AAClE,cAAGA,GAAG,CAACC,IAAJ,IAAYL,SAAf,EAAyB;AACrBM,YAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBC,IAAI,CAACH,IAAxB;AACAI,YAAAA,OAAO,CAACL,GAAG,CAACC,IAAL,CAAP;AACH;AACJ,SALD;AAMH;AAGJ,KAZD,EAaCK,KAbD,CAaQC,GAAD,IAASL,OAAO,CAACC,GAAR,CAAYI,GAAZ,CAbhB;AAcH,GAfQ,EAeP,EAfO,CAAT;AAgBA,sBACI;AAAK,IAAA,SAAS,EAAG,yBAAjB;AAAA,eAEQb,QAAQ,IAAIE,SAAZ,gBACA;AAAQ,MAAA,SAAS,EAAG,+BAApB;AAAmD,MAAA,KAAK,EAAC,MAAzD;AAAgE,MAAA,MAAM,EAAC,KAAvE;AAA8E,MAAA,QAAQ,MAAtF;AAAA,6BACI;AAAS,QAAA,GAAG,EAAG,uCAAsCC,EAAG,EAAxD;AAA2D,QAAA,IAAI,EAAC;AAAhE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADA,gBAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPR,eASI;AAAK,MAAA,SAAS,EAAG,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ,eAYI;AAAK,MAAA,SAAS,EAAG,SAAjB;AAAA,gBAEQH,QAAQ,IAAEE,SAAV,gBACI,QAAC,KAAD,CAAO,QAAP;AAAA,kBAEQF,QAAQ,CAACc,GAAT,CAAa,CAACC,MAAD,EAAQC,KAAR,KAAiB;AAC1B,8BACI;AAAG,YAAA,IAAI,EAAID,MAAM,CAACE,OAAlB;AAAA,mCACI;AAAQ,cAAA,SAAS,EAAG,UAApB;AAAA,wBAAgCF,MAAM,CAACG;AAAvC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ;AAKH,SAND;AAFR;AAAA;AAAA;AAAA;AAAA,cADJ,gBAaC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAfT;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiCH;;GApDQnB,S;UAEQF,S;;;KAFRE,S;AAsDT,eAAeA,SAAf","sourcesContent":["\r\n\r\nimport axios from 'axios';\r\nimport React, {useEffect} from 'react';\r\nimport {useState} from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport './VideoFilm.scss';\r\n\r\nvar test = [\r\n    'hello',\r\n    'votiendat',\r\n    'hoc vien buuc hinh vien thong',\r\n    'hello',\r\n    'votiendat',\r\n    'hoc vien buuc hinh vien thong',\r\n    'hello',\r\n    'votiendat',\r\n    'hoc vien buuc hinh vien thong',\r\n    'hoc vien buuc hinh vien thong',\r\n    'hello',\r\n    'votiendat',\r\n    'hoc vien buuc hinh vien thong',\r\n    'hoc vien buuc hinh vien thong',\r\n    'hello',\r\n    'votiendat',\r\n    'hoc vien buuc hinh vien thong',\r\n    \r\n]\r\n\r\nfunction VideoFilm(){\r\n    const [listfilm, setListfilm] = useState(undefined);\r\n    const {id} = useParams();\r\n    useEffect(()=> {\r\n        axios.get(`http://localhost:8081/ObjectVideoMoviesIdVideo/${id}`).\r\n        then((res) => {\r\n            if(res.data != undefined){\r\n                axios.get(`REACT_APP_ALL_VIDEO_MOVIES_ID/${res.data.id}`).then((res)=>{\r\n                    if(res.data != undefined){\r\n                        console.log('test',res1.data);\r\n                        setList(res.data);\r\n                    }\r\n                })\r\n            }\r\n            \r\n            \r\n        })\r\n        .catch((err) => console.log(err));\r\n    },[]);\r\n    return(\r\n        <div className = \"Film container-sm w-100\">\r\n            {\r\n                listfilm != undefined ?(\r\n                <video  className = \"VideoFilm container-sm w-100 \"width=\"1000\" height=\"500\"  controls>\r\n                    <source  src={`http://localhost:8081/static/videos/${id}`} type=\"video/mp4\"/>\r\n                </video>\r\n                ):\r\n                <h1>loading...</h1>\r\n            }\r\n            <div className = \"TenPhim\">\r\n                vo tien dat\r\n            </div>\r\n            <div className = \"TapPhim\">\r\n                {\r\n                    listfilm!=undefined ? (\r\n                        <React.Fragment>\r\n                            {\r\n                                listfilm.map((router,index) =>{\r\n                                    return(\r\n                                        <a href = {router.idvideo} >\r\n                                            <button className = \"col-sm-1\">{router.episode}</button>\r\n                                        </a>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </React.Fragment>\r\n                    )\r\n                    :<h1>loading...</h1>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoFilm;"]},"metadata":{},"sourceType":"module"}